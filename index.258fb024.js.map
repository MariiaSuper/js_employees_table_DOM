{"mappings":"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","sources":["<anon>","src/scripts/main.js"],"sourcesContent":["\"use strict\";\nfunction _define_property(obj, key, value) {\n    if (key in obj) {\n        Object.defineProperty(obj, key, {\n            value: value,\n            enumerable: true,\n            configurable: true,\n            writable: true\n        });\n    } else {\n        obj[key] = value;\n    }\n    return obj;\n}\nfunction _object_spread(target) {\n    for(var i = 1; i < arguments.length; i++){\n        var source = arguments[i] != null ? arguments[i] : {};\n        var ownKeys = Object.keys(source);\n        if (typeof Object.getOwnPropertySymbols === \"function\") {\n            ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function(sym) {\n                return Object.getOwnPropertyDescriptor(source, sym).enumerable;\n            }));\n        }\n        ownKeys.forEach(function(key) {\n            _define_property(target, key, source[key]);\n        });\n    }\n    return target;\n}\nfunction ownKeys(object, enumerableOnly) {\n    var keys = Object.keys(object);\n    if (Object.getOwnPropertySymbols) {\n        var symbols = Object.getOwnPropertySymbols(object);\n        if (enumerableOnly) {\n            symbols = symbols.filter(function(sym) {\n                return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n            });\n        }\n        keys.push.apply(keys, symbols);\n    }\n    return keys;\n}\nfunction _object_spread_props(target, source) {\n    source = source != null ? source : {};\n    if (Object.getOwnPropertyDescriptors) {\n        Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n        ownKeys(Object(source)).forEach(function(key) {\n            Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n        });\n    }\n    return target;\n}\nvar table = document.querySelector(\"table\");\nfunction formatCurrency(value) {\n    return new Intl.NumberFormat(\"en-US\", {\n        style: \"currency\",\n        currency: \"USD\",\n        minimumFractionDigits: 0\n    }).format(value);\n}\nfunction addColumNames(row) {\n    var columnNames = [\n        \"name\",\n        \"position\",\n        \"office\",\n        \"age\",\n        \"salary\"\n    ];\n    Array.from(row.cells).forEach(function(cell, index) {\n        cell.dataset.columnName = columnNames[index];\n    });\n}\ndocument.addEventListener(\"DOMContentLoaded\", function() {\n    var validate = function validate(data) {\n        // remove previous\n        if (document.querySelector(\".notification\")) document.body.removeChild(document.querySelector(\".notification\"));\n        var notification = document.createElement(\"div\");\n        notification.classList.add(\"notification\");\n        notification.setAttribute(\"data-qa\", \"notification\");\n        var res = true;\n        if (data.name.trim().length < 4) {\n            notification.innerText = \"Error: Name must be at least 4 characters long.\";\n            document.body.appendChild(notification);\n            res = false;\n        } else if (!data.position.trim().length) {\n            notification.innerText = \"Error:Position should exist.\";\n            document.body.appendChild(notification);\n            res = false;\n        } else if (data.age < 18 || data.age > 90) {\n            notification.innerText = \"Error: Age must be between 18 and 90.\";\n            res = false;\n        } else if (!Number.isInteger(+data.salary)) {\n            notification.innerText = \"Salary must be a number\";\n            res = false;\n        } else if (+data.salary <= 0) {\n            notification.innerText = \"Salary must be more than zero\";\n            res = false;\n        } else notification.innerText = \"Success\";\n        if (res) notification.classList.add(\"success\");\n        else notification.classList.add(\"error\");\n        document.body.appendChild(notification);\n        setTimeout(function() {\n            document.body.removeChild(notification);\n        }, 3000);\n        return res;\n    };\n    var sortTable = function sortTable(columnIndex) {\n        var tbody = table.querySelector(\"tbody\");\n        var rowsArray = Array.from(tbody.rows);\n        var isAscending;\n        if (currentSortedColumn === columnIndex) {\n            isAscending = currentSortOrder === \"desc\";\n            currentSortOrder = isAscending ? \"asc\" : \"desc\";\n        } else {\n            isAscending = true;\n            currentSortOrder = \"asc\";\n        }\n        currentSortedColumn = columnIndex;\n        rowsArray.sort(function(a, b) {\n            var cellA = a.cells[columnIndex].innerText;\n            var cellB = b.cells[columnIndex].innerText;\n            if (isAscending) return cellA.localeCompare(cellB, undefined, {\n                numeric: true\n            });\n            else return cellB.localeCompare(cellA, undefined, {\n                numeric: true\n            });\n        });\n        rowsArray.forEach(function(row) {\n            return tbody.appendChild(row);\n        });\n    };\n    var getSalary = function getSalary(str) {\n        return str.replaceAll(\",\", \"\").replaceAll(\"$\", \"\");\n    };\n    var editCell = function editCell(cell) {\n        if (cell.querySelector(\".cell-input\")) return;\n        var columnName = cell.dataset.columnName;\n        var row = cell.closest(\"tr\");\n        var initialData = {\n            name: row.querySelector('[data-column-name=\"name\"]').innerText,\n            position: row.querySelector('[data-column-name=\"position\"]').innerText,\n            age: row.querySelector('[data-column-name=\"age\"]').innerText,\n            office: row.querySelector('[data-column-name=\"office\"]').innerText,\n            salary: getSalary(row.querySelector('[data-column-name=\"salary\"]').innerText)\n        };\n        var initialValue = cell.innerText;\n        var input = document.createElement(\"input\");\n        input.type = \"text\";\n        input.className = \"cell-input\";\n        input.value = columnName === \"salary\" ? getSalary(initialValue) : initialValue;\n        cell.innerText = \"\";\n        cell.appendChild(input);\n        input.focus();\n        input.addEventListener(\"blur\", function() {\n            var newValue = input.value;\n            var data = _object_spread_props(_object_spread({}, initialData), _define_property({}, columnName, newValue));\n            if (validate(data)) cell.innerText = columnName === \"salary\" ? formatCurrency(newValue) : newValue;\n            else cell.innerText = initialValue;\n            if (cell.querySelector(\".cell-input\")) cell.removeChild(cell.querySelector(\".cell-input\"));\n        });\n        input.addEventListener(\"keypress\", function(e) {\n            if (e.key === \"Enter\") saveCell(cell, initialValue, input.value);\n        });\n    };\n    var saveCell = function saveCell(cell, initialValue, newValue) {\n        if (cell.querySelector(\".cell-input\")) cell.removeChild(cell.querySelector(\".cell-input\"));\n    };\n    var headers = table.querySelectorAll(\"th\");\n    var rows = table.querySelectorAll(\"tbody tr\");\n    var currentSortedColumn = null;\n    var currentSortOrder = \"asc\";\n    headers.forEach(function(header, index) {\n        header.addEventListener(\"click\", function() {\n            sortTable(index);\n        });\n    });\n    rows.forEach(function(row) {\n        row.addEventListener(\"click\", function() {\n            rows.forEach(function(r) {\n                return r.classList.remove(\"active\");\n            });\n            row.classList.add(\"active\");\n        });\n        Array.from(row.cells).forEach(function(cell, index) {\n            cell.addEventListener(\"dblclick\", function() {\n                editCell(cell);\n            });\n        });\n        addColumNames(row);\n    });\n    // сreate the form\n    var form = document.createElement(\"form\");\n    form.classList.add(\"new-employee-form\");\n    form.innerHTML = '\\n    <label>Name: <input name=\"name\" type=\"text\" data-qa=\"name\"></label>\\n    <label>Position: <input name=\"position\" type=\"text\" data-qa=\"position\"></label>\\n    <label>Office: \\n      <select name=\"office\" data-qa=\"office\">\\n        <option value=\"Tokyo\">Tokyo</option>\\n        <option value=\"Singapore\">Singapore</option>\\n        <option value=\"London\">London</option>\\n        <option value=\"New York\">New York</option>\\n        <option value=\"Edinburgh\">Edinburgh</option>\\n        <option value=\"San Francisco\">San Francisco</option>\\n      </select>\\n    </label>\\n    <label>Age: <input name=\"age\" type=\"number\" data-qa=\"age\"></label>\\n    <label>Salary: <input name=\"salary\" type=\"number\" data-qa=\"salary\"></label>\\n    <button type=\"submit\">Save to table</button>\\n  ';\n    document.body.appendChild(form);\n    // Handle form submission\n    form.addEventListener(\"submit\", function(e) {\n        e.preventDefault();\n        var n = form.querySelector('input[name=\"name\"]').value;\n        var position = form.querySelector('input[name=\"position\"]').value;\n        var office = form.querySelector('select[name=\"office\"]').value;\n        var age = form.querySelector('input[name=\"age\"]').value;\n        var salary = form.querySelector('input[name=\"salary\"]').value;\n        if (validate({\n            name: n,\n            position: position,\n            office: office,\n            age: age,\n            salary: salary\n        })) {\n            var newRow = document.createElement(\"tr\");\n            newRow.innerHTML = \"\\n        <td>\".concat(n, \"</td>\\n        <td>\").concat(position, \"</td>\\n        <td>\").concat(office, \"</td>\\n        <td>\").concat(age, \"</td>\\n        <td>\").concat(formatCurrency(salary), \"</td>\\n      \");\n            newRow.addEventListener(\"click\", function() {\n                rows.forEach(function(r) {\n                    return r.classList.remove(\"active\");\n                });\n                newRow.classList.add(\"active\");\n            });\n            Array.from(newRow.cells).forEach(function(cell) {\n                cell.addEventListener(\"dblclick\", function() {\n                    editCell(cell);\n                });\n            });\n            addColumNames(newRow);\n            table.querySelector(\"tbody\").appendChild(newRow);\n            form.reset();\n        }\n    });\n});\n\n//# sourceMappingURL=index.258fb024.js.map\n","'use strict';\n\nconst table = document.querySelector('table');\n\nfunction formatCurrency(value) {\n  return new Intl.NumberFormat('en-US', {\n    style: 'currency',\n    currency: 'USD',\n    minimumFractionDigits: 0,\n  }).format(value);\n}\n\nfunction addColumNames(row) {\n  const columnNames = ['name', 'position', 'office', 'age', 'salary'];\n\n  Array.from(row.cells).forEach((cell, index) => {\n    cell.dataset.columnName = columnNames[index];\n  });\n}\n\ndocument.addEventListener('DOMContentLoaded', () => {\n  const headers = table.querySelectorAll('th');\n  const rows = table.querySelectorAll('tbody tr');\n\n  let currentSortedColumn = null;\n  let currentSortOrder = 'asc';\n\n  headers.forEach((header, index) => {\n    header.addEventListener('click', () => {\n      sortTable(index);\n    });\n  });\n\n  rows.forEach((row) => {\n    row.addEventListener('click', () => {\n      rows.forEach((r) => r.classList.remove('active'));\n      row.classList.add('active');\n    });\n\n    Array.from(row.cells).forEach((cell, index) => {\n      cell.addEventListener('dblclick', () => {\n        editCell(cell);\n      });\n    });\n\n    addColumNames(row);\n  });\n\n  function validate(data) {\n    // remove previous\n    if (document.querySelector('.notification')) {\n      document.body.removeChild(document.querySelector('.notification'));\n    }\n\n    const notification = document.createElement('div');\n\n    notification.classList.add('notification');\n    notification.setAttribute('data-qa', 'notification');\n\n    let res = true;\n\n    if (data.name.trim().length < 4) {\n      notification.innerText =\n        'Error: Name must be at least 4 characters long.';\n      document.body.appendChild(notification);\n\n      res = false;\n    } else if (!data.position.trim().length) {\n      notification.innerText = 'Error:Position should exist.';\n      document.body.appendChild(notification);\n\n      res = false;\n    } else if (data.age < 18 || data.age > 90) {\n      notification.innerText = 'Error: Age must be between 18 and 90.';\n\n      res = false;\n    } else if (!Number.isInteger(+data.salary)) {\n      notification.innerText = 'Salary must be a number';\n\n      res = false;\n    } else if (+data.salary <= 0) {\n      notification.innerText = 'Salary must be more than zero';\n\n      res = false;\n    } else {\n      notification.innerText = 'Success';\n    }\n\n    if (res) {\n      notification.classList.add('success');\n    } else {\n      notification.classList.add('error');\n    }\n\n    document.body.appendChild(notification);\n\n    setTimeout(() => {\n      document.body.removeChild(notification);\n    }, 3000);\n\n    return res;\n  }\n\n  function sortTable(columnIndex) {\n    const tbody = table.querySelector('tbody');\n    const rowsArray = Array.from(tbody.rows);\n\n    let isAscending;\n\n    if (currentSortedColumn === columnIndex) {\n      isAscending = currentSortOrder === 'desc';\n      currentSortOrder = isAscending ? 'asc' : 'desc';\n    } else {\n      isAscending = true;\n      currentSortOrder = 'asc';\n    }\n    currentSortedColumn = columnIndex;\n\n    rowsArray.sort((a, b) => {\n      const cellA = a.cells[columnIndex].innerText;\n      const cellB = b.cells[columnIndex].innerText;\n\n      if (isAscending) {\n        return cellA.localeCompare(cellB, undefined, { numeric: true });\n      } else {\n        return cellB.localeCompare(cellA, undefined, { numeric: true });\n      }\n    });\n\n    rowsArray.forEach((row) => tbody.appendChild(row));\n  }\n\n  // сreate the form\n  const form = document.createElement('form');\n\n  form.classList.add('new-employee-form');\n\n  form.innerHTML = `\n    <label>Name: <input name=\"name\" type=\"text\" data-qa=\"name\"></label>\n    <label>Position: <input name=\"position\" type=\"text\" data-qa=\"position\"></label>\n    <label>Office: \n      <select name=\"office\" data-qa=\"office\">\n        <option value=\"Tokyo\">Tokyo</option>\n        <option value=\"Singapore\">Singapore</option>\n        <option value=\"London\">London</option>\n        <option value=\"New York\">New York</option>\n        <option value=\"Edinburgh\">Edinburgh</option>\n        <option value=\"San Francisco\">San Francisco</option>\n      </select>\n    </label>\n    <label>Age: <input name=\"age\" type=\"number\" data-qa=\"age\"></label>\n    <label>Salary: <input name=\"salary\" type=\"number\" data-qa=\"salary\"></label>\n    <button type=\"submit\">Save to table</button>\n  `;\n  document.body.appendChild(form);\n\n  // Handle form submission\n  form.addEventListener('submit', (e) => {\n    e.preventDefault();\n\n    const n = form.querySelector('input[name=\"name\"]').value;\n    const position = form.querySelector('input[name=\"position\"]').value;\n    const office = form.querySelector('select[name=\"office\"]').value;\n    const age = form.querySelector('input[name=\"age\"]').value;\n    const salary = form.querySelector('input[name=\"salary\"]').value;\n\n    if (\n      validate({\n        name: n,\n        position,\n        office,\n        age,\n        salary,\n      })\n    ) {\n      const newRow = document.createElement('tr');\n\n      newRow.innerHTML = `\n        <td>${n}</td>\n        <td>${position}</td>\n        <td>${office}</td>\n        <td>${age}</td>\n        <td>${formatCurrency(salary)}</td>\n      `;\n\n      newRow.addEventListener('click', () => {\n        rows.forEach((r) => r.classList.remove('active'));\n        newRow.classList.add('active');\n      });\n\n      Array.from(newRow.cells).forEach((cell) => {\n        cell.addEventListener('dblclick', () => {\n          editCell(cell);\n        });\n      });\n\n      addColumNames(newRow);\n\n      table.querySelector('tbody').appendChild(newRow);\n\n      form.reset();\n    }\n  });\n\n  function getSalary(str) {\n    return str.replaceAll(',', '').replaceAll('$', '');\n  }\n\n  function editCell(cell) {\n    if (cell.querySelector('.cell-input')) {\n      return;\n    }\n\n    const columnName = cell.dataset.columnName;\n\n    const row = cell.closest('tr');\n    const initialData = {\n      name: row.querySelector('[data-column-name=\"name\"]').innerText,\n      position: row.querySelector('[data-column-name=\"position\"]').innerText,\n      age: row.querySelector('[data-column-name=\"age\"]').innerText,\n      office: row.querySelector('[data-column-name=\"office\"]').innerText,\n      salary: getSalary(\n        row.querySelector('[data-column-name=\"salary\"]').innerText,\n      ),\n    };\n\n    const initialValue = cell.innerText;\n    const input = document.createElement('input');\n\n    input.type = 'text';\n    input.className = 'cell-input';\n\n    input.value =\n      columnName === 'salary' ? getSalary(initialValue) : initialValue;\n\n    cell.innerText = '';\n    cell.appendChild(input);\n    input.focus();\n\n    input.addEventListener('blur', () => {\n      const newValue = input.value;\n\n      const data = {\n        ...initialData,\n        [columnName]: newValue,\n      };\n\n      if (validate(data)) {\n        cell.innerText =\n          columnName === 'salary' ? formatCurrency(newValue) : newValue;\n      } else {\n        cell.innerText = initialValue;\n      }\n\n      if (cell.querySelector('.cell-input')) {\n        cell.removeChild(cell.querySelector('.cell-input'));\n      }\n    });\n\n    input.addEventListener('keypress', (e) => {\n      if (e.key === 'Enter') {\n        saveCell(cell, initialValue, input.value);\n      }\n    });\n  }\n\n  function saveCell(cell, initialValue, newValue) {\n    if (cell.querySelector('.cell-input')) {\n      cell.removeChild(cell.querySelector('.cell-input'));\n    }\n  }\n});\n"],"names":["_define_property","obj","key","value","Object","defineProperty","enumerable","configurable","writable","table","document","querySelector","formatCurrency","Intl","NumberFormat","style","currency","minimumFractionDigits","format","addColumNames","row","columnNames","Array","from","cells","forEach","cell","index","dataset","columnName","addEventListener","validate","data","body","removeChild","notification","createElement","classList","add","setAttribute","res","name","trim","length","innerText","appendChild","position","age","Number","isInteger","salary","setTimeout","sortTable","columnIndex","isAscending","tbody","rowsArray","rows","currentSortedColumn","currentSortOrder","sort","a","b","cellA","cellB","localeCompare","undefined","numeric","getSalary","str","replaceAll","editCell","closest","initialData","office","initialValue","input","type","className","focus","target","source","newValue","_object_spread","i","arguments","ownKeys","keys","getOwnPropertySymbols","concat","filter","sym","getOwnPropertyDescriptor","getOwnPropertyDescriptors","defineProperties","object","enumerableOnly","symbols","push","apply","e","saveCell","headers","querySelectorAll","header","r","remove","form","innerHTML","preventDefault","n","newRow","reset"],"version":3,"file":"index.258fb024.js.map"}